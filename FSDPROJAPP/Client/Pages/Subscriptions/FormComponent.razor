@inject HttpClient _client
@using FSDPROJAPP.Shared.Domain

<EditForm Model="@subscription" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <fieldset disabled="@Disabled">
        <div class="form-group">
            <label>Profile: </label>
            <div>
                <InputSelect @bind-Value="subscription.ProfileId" class="form-control">
                    <option value="">-- Select Profile --</option>
                    @if (Profiles != null)
                    {
                        foreach (var profile in Profiles)
                        {
                            <option value="@profile.Id">@profile.Hobby.Name @profile.Detail.Name -- @profile.Phonenumber</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => subscription.ProfileId)" />
            </div>
        </div>
        @*
        <div class="form-group">
            <label>Customer: </label>
            <div>
                <InputSelect @bind-Value="subscription.CustomerId" class="form-control">
                    <option value="">-- Select Profile --</option>
                    @if (Customers != null)
                    {
                        foreach (var customer in Customers)
                        {
                            <option value="@customer.Id">@customer.FirstName -- @customer.DrivingLicense</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => subscription.CustomerId)" />
            </div>
        </div>
        *@
        <div class="form-group">
            <label>Date Out: </label>
            <div>
                <InputDate @bind-Value="subscription.DateOut" class="form-control" />
                <ValidationMessage For="@(() => subscription.DateOut)" />
            </div>
        </div>
        @if (subscription.Id > 0)
        {
            <div class="form-group">
                <label>Date In: </label>
                <div>
                    <InputDate @bind-Value="@subscription.DateIn" class="form-control" />
                    <ValidationMessage For="@(() => subscription.DateIn)" />
                </div>
            </div>
        }
    </fieldset>
    <br />
    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
    }
    <BackToList Target="subscriptions" />
</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Subscription? subscription { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Profile>? Profiles;
    @*private IList<Customer>? Customers;*@

    protected async override Task OnInitializedAsync()
    {
        Profiles = await _client.GetFromJsonAsync<List<Profile>>($"{Endpoints.ProfilesEndpoint}");
        @*Customers = await _client.GetFromJsonAsync<List<Customer>>($"{Endpoints.CustomersEndpoint}");*@
    }
}
